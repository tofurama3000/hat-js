!function(e){var r={};function t(n){if(r[n])return r[n].exports;var a=r[n]={i:n,l:!1,exports:{}};return e[n].call(a.exports,a,a.exports,t),a.l=!0,a.exports}t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:n})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var a in e)t.d(n,a,function(r){return e[r]}.bind(null,a));return n},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p="",t(t.s=12)}([function(e,r,t){"use strict";function n(e){for(var t in e)r.hasOwnProperty(t)||(r[t]=e[t])}Object.defineProperty(r,"__esModule",{value:!0}),n(t(16)),n(t(17)),n(t(18)),n(t(8)),n(t(19))},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(3);r.toIterableOrEmpty=function(e){return n.isIterable(e)?e:[]}},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.toArrayOrEmpty=function(e){return Array.isArray(e)?e:[]}},function(e,r,t){"use strict";function n(e){for(var t in e)r.hasOwnProperty(t)||(r[t]=e[t])}Object.defineProperty(r,"__esModule",{value:!0}),n(t(4)),n(t(13)),n(t(14)),n(t(15)),n(t(6)),n(t(5)),n(t(7))},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.isFunction=function(e){return"function"==typeof e}},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.isObject=function(e){return e===Object(e)}},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.isNull=function(e){return null===e}},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.isUndefined=function(e){return void 0===e}},function(e,r,t){"use strict";function n(e){return function(e){if(Array.isArray(e)){for(var r=0,t=new Array(e.length);r<e.length;r++)t[r]=e[r];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}Object.defineProperty(r,"__esModule",{value:!0}),r.reverseArgs=function(e){return function(){for(var r=arguments.length,t=new Array(r),a=0;a<r;a++)t[a]=arguments[a];return e.apply(void 0,n(t.reverse()))}}},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(0),a=t(1);r.limit=n.curry(regeneratorRuntime.mark(function e(r,t){var n,u,i,o,c,s,f,l;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:n=a.toIterableOrEmpty(t),u=0,i=!0,o=!1,c=void 0,e.prev=5,s=n[Symbol.iterator]();case 7:if(i=(f=s.next()).done){e.next=18;break}if(l=f.value,!(u++<(0|r))){e.next=14;break}return e.next=12,l;case 12:e.next=15;break;case 14:return e.abrupt("break",18);case 15:i=!0,e.next=7;break;case 18:e.next=24;break;case 20:e.prev=20,e.t0=e.catch(5),o=!0,c=e.t0;case 24:e.prev=24,e.prev=25,i||null==s.return||s.return();case 27:if(e.prev=27,!o){e.next=30;break}throw c;case 30:return e.finish(27);case 31:return e.finish(24);case 32:case"end":return e.stop()}},e,this,[[5,20,24,32],[25,,27,31]])}))},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(0),a=t(2);r.map=n.curry(function(e,r){return a.toArrayOrEmpty(r).map(e)})},function(e,r,t){"use strict";function n(e){return function(e){if(Array.isArray(e)){for(var r=0,t=new Array(e.length);r<e.length;r++)t[r]=e[r];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}Object.defineProperty(r,"__esModule",{value:!0});var a=t(0),u=t(1);r.flatten=a.curry(function(e){var r;return(r=[]).concat.apply(r,n(u.toIterableOrEmpty(e)))})},function(e,r,t){"use strict";var n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var r={};if(null!=e)for(var t in e)Object.hasOwnProperty.call(e,t)&&(r[t]=e[t]);return r.default=e,r};Object.defineProperty(r,"__esModule",{value:!0});var a=n(t(3));r.is=a;var u=n(t(0));r.fp=u;var i=n(t(20));r.iterators=i;var o=n(t(32));r.arrays=o;var c=n(t(43));r.utils=c},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.isInfinite=function(e){return e===1/0||e===-1/0}},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(5),a=t(4);r.isIterable=function(e){return n.isObject(e)&&a.isFunction(e[Symbol.iterator])}},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(6),a=t(7);r.isNil=function(e){return n.isNull(e)||a.isUndefined(e)}},function(e,r,t){"use strict";function n(e){return function(e){if(Array.isArray(e)){for(var r=0,t=new Array(e.length);r<e.length;r++)t[r]=e[r];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}Object.defineProperty(r,"__esModule",{value:!0}),r.curry=function(e){return function r(t){return function(){for(var a=arguments.length,u=new Array(a),i=0;i<a;i++)u[i]=arguments[i];var o=t.concat(u);return o.length<e.length?r(o):e.apply(void 0,n(o))}}([])}},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(3);function a(){for(var e=arguments.length,r=new Array(e),t=0;t<e;t++)r[t]=arguments[t];return function(e){for(var t=e,n=0;n<r.length;n++){t=(0,r[n])(t)}return t}}r.pipe=function(e){for(var r=arguments.length,t=new Array(r>1?r-1:0),u=1;u<r;u++)t[u-1]=arguments[u];return n.isFunction(e)?a.apply(void 0,[e].concat(t)):a.apply(void 0,t)(e)}},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.or=function(){for(var e=arguments.length,r=new Array(e),t=0;t<e;t++)r[t]=arguments[t];return function(e){return r.concat().reduce(function(r,t){return r||t(e)},!1)}},r.and=function(){for(var e=arguments.length,r=new Array(e),t=0;t<e;t++)r[t]=arguments[t];return function(e){return r.concat().reduce(function(r,t){return r&&t(e)},!0)&&!!r.length}},r.xor=function(){for(var e=arguments.length,r=new Array(e),t=0;t<e;t++)r[t]=arguments[t];return function(e){return 1===r.concat().map(function(r){return+r(e)}).reduce(function(e,r){return e+r},0)}},r.negate=function(e){return function(r){return!e(r)}},r.toPredicate=function(e){return function(r){return!!e(r)}},r.boolToPredicate=function(e){return function(){return e}}},function(e,r,t){"use strict";function n(e){return function(e){if(Array.isArray(e)){for(var r=0,t=new Array(e.length);r<e.length;r++)t[r]=e[r];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}Object.defineProperty(r,"__esModule",{value:!0});var a=t(8);r.reverseCurry=function(e){return function r(t){return function(){for(var u=arguments.length,i=new Array(u),o=0;o<u;o++)i[o]=arguments[o];var c=t.concat(i);return c.length<e.length?r(c):a.reverseArgs(e).apply(void 0,n(c))}}([])}},function(e,r,t){"use strict";function n(e){for(var t in e)r.hasOwnProperty(t)||(r[t]=e[t])}Object.defineProperty(r,"__esModule",{value:!0}),n(t(21)),n(t(22)),n(t(23)),n(t(24)),n(t(9)),n(t(25)),n(t(26)),n(t(27)),n(t(28)),n(t(29)),n(t(30)),n(t(31))},function(e,r,t){"use strict";function n(e){return function(e){if(Array.isArray(e)){for(var r=0,t=new Array(e.length);r<e.length;r++)t[r]=e[r];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}Object.defineProperty(r,"__esModule",{value:!0});var a=t(3),u=t(9),i=t(1);r.collectToArray=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1/0;return a.isInfinite(t)?n(i.toIterableOrEmpty(e)):r.collectToArray(u.limit(t,i.toIterableOrEmpty(e)))}},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(0),a=t(1);r.filter=n.curry(regeneratorRuntime.mark(function e(r,t){var n,u,i,o,c,s,f;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:n=a.toIterableOrEmpty(t),u=!0,i=!1,o=void 0,e.prev=4,c=n[Symbol.iterator]();case 6:if(u=(s=c.next()).done){e.next=14;break}if(f=s.value,!r(f)){e.next=11;break}return e.next=11,f;case 11:u=!0,e.next=6;break;case 14:e.next=20;break;case 16:e.prev=16,e.t0=e.catch(4),i=!0,o=e.t0;case 20:e.prev=20,e.prev=21,u||null==c.return||c.return();case 23:if(e.prev=23,!i){e.next=26;break}throw o;case 26:return e.finish(23);case 27:return e.finish(20);case 28:case"end":return e.stop()}},e,this,[[4,16,20,28],[21,,23,27]])}))},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(0),a=t(3),u=t(1);r.flatMap=n.curry(regeneratorRuntime.mark(function e(r,t){var n,i,o,c,s,f,l,p,v,b,y,d,h,x;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:n=u.toIterableOrEmpty(t),i=!0,o=!1,c=void 0,e.prev=4,s=n[Symbol.iterator]();case 6:if(i=(f=s.next()).done){e.next=43;break}if(l=f.value,p=r(l),!a.isIterable(p)){e.next=38;break}v=!0,b=!1,y=void 0,e.prev=13,d=p[Symbol.iterator]();case 15:if(v=(h=d.next()).done){e.next=22;break}return x=h.value,e.next=19,x;case 19:v=!0,e.next=15;break;case 22:e.next=28;break;case 24:e.prev=24,e.t0=e.catch(13),b=!0,y=e.t0;case 28:e.prev=28,e.prev=29,v||null==d.return||d.return();case 31:if(e.prev=31,!b){e.next=34;break}throw y;case 34:return e.finish(31);case 35:return e.finish(28);case 36:e.next=40;break;case 38:return e.next=40,p;case 40:i=!0,e.next=6;break;case 43:e.next=49;break;case 45:e.prev=45,e.t1=e.catch(4),o=!0,c=e.t1;case 49:e.prev=49,e.prev=50,i||null==s.return||s.return();case 52:if(e.prev=52,!o){e.next=55;break}throw c;case 55:return e.finish(52);case 56:return e.finish(49);case 57:case"end":return e.stop()}},e,this,[[4,45,49,57],[13,24,28,36],[29,,31,35],[50,,52,56]])}))},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(0),a=t(3),u=t(1);r.flatten=n.curry(regeneratorRuntime.mark(function e(r){var t,n,i,o,c,s,f,l,p,v,b,y,d;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:t=u.toIterableOrEmpty(r),n=!0,i=!1,o=void 0,e.prev=4,c=t[Symbol.iterator]();case 6:if(n=(s=c.next()).done){e.next=42;break}if(f=s.value,!a.isIterable(f)){e.next=37;break}l=!0,p=!1,v=void 0,e.prev=12,b=f[Symbol.iterator]();case 14:if(l=(y=b.next()).done){e.next=21;break}return d=y.value,e.next=18,d;case 18:l=!0,e.next=14;break;case 21:e.next=27;break;case 23:e.prev=23,e.t0=e.catch(12),p=!0,v=e.t0;case 27:e.prev=27,e.prev=28,l||null==b.return||b.return();case 30:if(e.prev=30,!p){e.next=33;break}throw v;case 33:return e.finish(30);case 34:return e.finish(27);case 35:e.next=39;break;case 37:return e.next=39,f;case 39:n=!0,e.next=6;break;case 42:e.next=48;break;case 44:e.prev=44,e.t1=e.catch(4),i=!0,o=e.t1;case 48:e.prev=48,e.prev=49,n||null==c.return||c.return();case 51:if(e.prev=51,!i){e.next=54;break}throw o;case 54:return e.finish(51);case 55:return e.finish(48);case 56:case"end":return e.stop()}},e,this,[[4,44,48,56],[12,23,27,35],[28,,30,34],[49,,51,55]])}))},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(0),a=t(1);r.map=n.curry(regeneratorRuntime.mark(function e(r,t){var n,u,i,o,c,s,f;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:n=a.toIterableOrEmpty(t),u=!0,i=!1,o=void 0,e.prev=4,c=n[Symbol.iterator]();case 6:if(u=(s=c.next()).done){e.next=13;break}return f=s.value,e.next=10,r(f);case 10:u=!0,e.next=6;break;case 13:e.next=19;break;case 15:e.prev=15,e.t0=e.catch(4),i=!0,o=e.t0;case 19:e.prev=19,e.prev=20,u||null==c.return||c.return();case 22:if(e.prev=22,!i){e.next=25;break}throw o;case 25:return e.finish(22);case 26:return e.finish(19);case 27:case"end":return e.stop()}},e,this,[[4,15,19,27],[20,,22,26]])}))},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(0),a=t(1);r.scan=n.curry(regeneratorRuntime.mark(function e(r,t,n){var u,i,o,c,s,f,l,p;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:u=a.toIterableOrEmpty(n),i=t,o=!0,c=!1,s=void 0,e.prev=5,f=u[Symbol.iterator]();case 7:if(o=(l=f.next()).done){e.next=15;break}return p=l.value,i=r(i,p),e.next=12,i;case 12:o=!0,e.next=7;break;case 15:e.next=21;break;case 17:e.prev=17,e.t0=e.catch(5),c=!0,s=e.t0;case 21:e.prev=21,e.prev=22,o||null==f.return||f.return();case 24:if(e.prev=24,!c){e.next=27;break}throw s;case 27:return e.finish(24);case 28:return e.finish(21);case 29:case"end":return e.stop()}},e,this,[[5,17,21,29],[22,,24,28]])}))},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(0),a=t(1);r.skip=n.curry(regeneratorRuntime.mark(function e(){var r,t,n,u,i,o,c,s,f=arguments;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:for(r=f.length>0&&void 0!==f[0]?f[0]:1,t=f.length>1?f[1]:void 0,n=a.toIterableOrEmpty(t)[Symbol.iterator](),u=!1,i=0;i<r&&!u;++i)u=n.next().done;if(!u){e.next=7;break}return e.abrupt("return");case 7:if(o=n.next(),c=o.done,s=o.value,!c){e.next=11;break}return e.abrupt("return");case 11:return e.next=13,s;case 13:e.next=7;break;case 15:case"end":return e.stop()}},e,this)}))},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(0),a=t(1);r.tap=n.curry(regeneratorRuntime.mark(function e(r,t){var n,u,i,o,c,s,f;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:n=a.toIterableOrEmpty(t),u=!0,i=!1,o=void 0,e.prev=4,c=n[Symbol.iterator]();case 6:if(u=(s=c.next()).done){e.next=14;break}return f=s.value,r(f),e.next=11,f;case 11:u=!0,e.next=6;break;case 14:e.next=20;break;case 16:e.prev=16,e.t0=e.catch(4),i=!0,o=e.t0;case 20:e.prev=20,e.prev=21,u||null==c.return||c.return();case 23:if(e.prev=23,!i){e.next=26;break}throw o;case 26:return e.finish(23);case 27:return e.finish(20);case 28:case"end":return e.stop()}},e,this,[[4,16,20,28],[21,,23,27]])}))},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(0),a=t(1);r.zip=n.curry(regeneratorRuntime.mark(function e(r,t){var n,u,i,o,c,s,f=arguments;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:for(n=f.length,u=new Array(n>2?n-2:0),i=2;i<n;i++)u[i-2]=f[i];o=[r,t].concat(u).map(a.toIterableOrEmpty).map(function(e){return e[Symbol.iterator]()});case 2:if(c=o.map(function(e){return e.next()}),s=c.map(function(e){var r=e.value;return e.done?null:r}),!c.reduce(function(e,r){return e&&r.done},!0)){e.next=7;break}return e.abrupt("return");case 7:return e.next=9,s;case 9:e.next=2;break;case 11:case"end":return e.stop()}},e,this)}))},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(0),a=t(3);r.takeWhile=n.curry(regeneratorRuntime.mark(function e(r,t){var n,u,i,o,c,s,f,l,p,v,b,y,d,h;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!a.isIterable(r)){e.next=33;break}n=r[Symbol.iterator](),u=!0,i=!1,o=void 0,e.prev=5,c=t[Symbol.iterator]();case 7:if(u=(s=c.next()).done){e.next=17;break}if(f=s.value,(l=n.next()).value&&!l.done){e.next=12;break}return e.abrupt("return");case 12:return e.next=14,f;case 14:u=!0,e.next=7;break;case 17:e.next=23;break;case 19:e.prev=19,e.t0=e.catch(5),i=!0,o=e.t0;case 23:e.prev=23,e.prev=24,u||null==c.return||c.return();case 26:if(e.prev=26,!i){e.next=29;break}throw o;case 29:return e.finish(26);case 30:return e.finish(23);case 31:e.next=63;break;case 33:p=!0,v=!1,b=void 0,e.prev=36,y=t[Symbol.iterator]();case 38:if(p=(d=y.next()).done){e.next=49;break}if(h=d.value,!r(h)){e.next=45;break}return e.next=43,h;case 43:e.next=46;break;case 45:return e.abrupt("return");case 46:p=!0,e.next=38;break;case 49:e.next=55;break;case 51:e.prev=51,e.t1=e.catch(36),v=!0,b=e.t1;case 55:e.prev=55,e.prev=56,p||null==y.return||y.return();case 58:if(e.prev=58,!v){e.next=61;break}throw b;case 61:return e.finish(58);case 62:return e.finish(55);case 63:case"end":return e.stop()}},e,this,[[5,19,23,31],[24,,26,30],[36,51,55,63],[56,,58,62]])})),r.takeWhilePushPull=n.curry(regeneratorRuntime.mark(function e(r,t){var n,a,u,i,o,c,s,f;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:n=r[Symbol.iterator](),a=!0,u=!1,i=void 0,e.prev=4,o=t[Symbol.iterator]();case 6:if(a=(c=o.next()).done){e.next=19;break}if(s=c.value,!(f=n.next()).done&&f.value){e.next=11;break}return e.abrupt("return");case 11:if(!(f=n.next(s)).done&&f.value){e.next=14;break}return e.abrupt("return");case 14:return e.next=16,s;case 16:a=!0,e.next=6;break;case 19:e.next=25;break;case 21:e.prev=21,e.t0=e.catch(4),u=!0,i=e.t0;case 25:e.prev=25,e.prev=26,a||null==o.return||o.return();case 28:if(e.prev=28,!u){e.next=31;break}throw i;case 31:return e.finish(28);case 32:return e.finish(25);case 33:case"end":return e.stop()}},e,this,[[4,21,25,33],[26,,28,32]])}))},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(0),a=t(1);r.chunk=n.curry(regeneratorRuntime.mark(function e(r,t){var n,u,i,o,c,s,f,l;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:n=a.toIterableOrEmpty(t),u=[],i=!0,o=!1,c=void 0,e.prev=5,s=n[Symbol.iterator]();case 7:if(i=(f=s.next()).done){e.next=17;break}if(l=f.value,!(u.length>=r)){e.next=13;break}return e.next=12,u;case 12:u=[];case 13:u.push(l);case 14:i=!0,e.next=7;break;case 17:e.next=23;break;case 19:e.prev=19,e.t0=e.catch(5),o=!0,c=e.t0;case 23:e.prev=23,e.prev=24,i||null==s.return||s.return();case 26:if(e.prev=26,!o){e.next=29;break}throw c;case 29:return e.finish(26);case 30:return e.finish(23);case 31:if(!u.length){e.next=34;break}return e.next=34,u;case 34:case"end":return e.stop()}},e,this,[[5,19,23,31],[24,,26,30]])}))},function(e,r,t){"use strict";function n(e){for(var t in e)r.hasOwnProperty(t)||(r[t]=e[t])}Object.defineProperty(r,"__esModule",{value:!0}),n(t(33)),n(t(34)),n(t(11)),n(t(35)),n(t(10)),n(t(36)),n(t(37)),n(t(38)),n(t(39)),n(t(40)),n(t(2)),n(t(41)),n(t(42))},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(0),a=t(2);r.filter=n.curry(function(e,r){return a.toArrayOrEmpty(r).filter(e)})},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(0),a=t(2),u=t(10),i=t(11);r.flatMap=n.curry(function(e,r){return n.pipe(a.toArrayOrEmpty(r),u.map(e),i.flatten)})},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(0),a=t(2);r.limit=n.curry(function(e,r){return a.toArrayOrEmpty(r).splice(0,e)})},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(0),a=t(2);r.scan=n.curry(function(e,r,t){var n=r;return a.toArrayOrEmpty(t).map(function(r){return n=e(n,r)})})},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(0),a=t(2);r.skip=n.curry(function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,r=arguments.length>1?arguments[1]:void 0;return a.toArrayOrEmpty(r).splice(e)})},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(0),a=t(2);r.tap=n.curry(function(e,r){return a.toArrayOrEmpty(r).forEach(e),r})},function(e,r,t){"use strict";function n(e){return function(e){if(Array.isArray(e)){for(var r=0,t=new Array(e.length);r<e.length;r++)t[r]=e[r];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}Object.defineProperty(r,"__esModule",{value:!0});var a=t(0);r.zip=a.curry(function(e,r){for(var t=arguments.length,a=new Array(t>2?t-2:0),u=2;u<t;u++)a[u-2]=arguments[u];for(var i=[e,r].concat(a),o=Math.max.apply(Math,n(i.map(function(e){return e.length}))),c=[],s=function(e){c.push(i.map(function(r){return e<r.length?r[e]:null}))},f=0;f<o;++f)s(f);return c})},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(0),a=t(2);r.takeWhile=n.curry(function(e,r){for(var t=a.toArrayOrEmpty(r),n=[],u=0;u<t.length;++u){if(!e(t[u]))return n;n.push(t[u])}return n})},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(0),a=t(2);r.reduce=n.curry(function(e,r,t){return a.toArrayOrEmpty(t).reduce(e,r)})},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(0),a=t(2);r.chunk=n.curry(function(e,r){var t=a.toArrayOrEmpty(r),n=[],u=[],i=!0,o=!1,c=void 0;try{for(var s,f=t[Symbol.iterator]();!(i=(s=f.next()).done);i=!0){var l=s.value;u.length>=e&&(n.push(u),u=[]),u.push(l)}}catch(e){o=!0,c=e}finally{try{i||null==f.return||f.return()}finally{if(o)throw c}}return u.length&&n.push(u),n})},function(e,r,t){"use strict";function n(e){for(var t in e)r.hasOwnProperty(t)||(r[t]=e[t])}Object.defineProperty(r,"__esModule",{value:!0}),n(t(44)),n(t(45))},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(3);r.lazyRange=function(e,t){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;if(n.isNil(t))return r.lazyRange(0,e,a);var u=+(t||0),i=+e,o=Math.abs(a||1);return n.isInfinite(u)?n.isInfinite(i)?regeneratorRuntime.mark(function e(){var r;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,0;case 2:r=o;case 3:return e.next=5,r;case 5:return e.next=7,-r;case 7:r+=o,e.next=3;break;case 10:case"end":return e.stop()}},e,this)})():u===1/0?regeneratorRuntime.mark(function e(){var r;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:r=i;case 1:return e.next=3,r;case 3:r+=o,e.next=1;break;case 6:case"end":return e.stop()}},e,this)})():regeneratorRuntime.mark(function e(){var r;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:r=i;case 1:return e.next=3,r;case 3:r-=o,e.next=1;break;case 6:case"end":return e.stop()}},e,this)})():i<u?regeneratorRuntime.mark(function e(){var r;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:r=i;case 1:if(!(r<u)){e.next=7;break}return e.next=4,r;case 4:r+=o,e.next=1;break;case 7:case"end":return e.stop()}},e,this)})():regeneratorRuntime.mark(function e(){var r;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:r=i;case 1:if(!(r>u)){e.next=7;break}return e.next=4,r;case 4:r-=o,e.next=1;break;case 7:case"end":return e.stop()}},e,this)})()}},function(e,r,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0});var n=t(3);r.range=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1?arguments[1]:void 0,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;if(n.isNil(t))return r.range(0,e,a);var u=[],i=+(t||0),o=+e,c=Math.abs(a||1);if(o<i)for(var s=o;s<i;s+=c)u.push(s);else for(var f=o;f>i;f-=c)u.push(f);return u}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,